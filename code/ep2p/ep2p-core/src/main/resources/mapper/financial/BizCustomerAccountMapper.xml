<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yscf.core.dao.financial.BizCustomerAccountMapper" >
  <resultMap id="BaseResultMap" type="com.yscf.core.model.financial.BizCustomerAccount" >
    <id column="PID" property="pid" jdbcType="VARCHAR" />
    <result column="customer_id" property="customerId" jdbcType="VARCHAR" />
    <result column="recharge_amount" property="rechargeAmount" jdbcType="DECIMAL" />
    <result column="withdraw_amount" property="withdrawAmount" jdbcType="DECIMAL" />
    <result column="due_amount" property="dueAmount" jdbcType="DECIMAL" />
    <result column="available_amount" property="availableAmount" jdbcType="DECIMAL" />
    <result column="freeze_amount" property="freezeAmount" jdbcType="DECIMAL" />
    <result column="tender_amount" property="tenderAmount" jdbcType="DECIMAL" />
    <result column="experience_amount" property="experienceAmount" jdbcType="DECIMAL" />
    <result column="status" property="status" jdbcType="VARCHAR" />
    <result column="create_user" property="createUser" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="last_update_user" property="lastUpdateUser" jdbcType="VARCHAR" />
    <result column="last_update_time" property="lastUpdateTime" jdbcType="TIMESTAMP" />
    <result column="acc_com_desc" property="accComDesc" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    PID, customer_id, recharge_amount, withdraw_amount, due_amount, available_amount, 
    freeze_amount, tender_amount, experience_amount, status, create_user, create_time, 
    last_update_user, last_update_time, acc_com_desc
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from t_biz_customer_account
    where PID = #{pid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from t_biz_customer_account
    where PID = #{pid,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.yscf.core.model.financial.BizCustomerAccount" >
    insert into t_biz_customer_account (PID, customer_id, recharge_amount, 
      withdraw_amount, due_amount, available_amount, 
      freeze_amount, tender_amount, experience_amount, 
      status, create_user, create_time, 
      last_update_user, last_update_time, acc_com_desc
      )
    values (#{pid,jdbcType=VARCHAR}, #{customerId,jdbcType=VARCHAR}, #{rechargeAmount,jdbcType=DECIMAL}, 
      #{withdrawAmount,jdbcType=DECIMAL}, #{dueAmount,jdbcType=DECIMAL}, #{availableAmount,jdbcType=DECIMAL}, 
      #{freezeAmount,jdbcType=DECIMAL}, #{tenderAmount,jdbcType=DECIMAL}, #{experienceAmount,jdbcType=DECIMAL}, 
      #{status,jdbcType=VARCHAR}, #{createUser,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{lastUpdateUser,jdbcType=VARCHAR}, #{lastUpdateTime,jdbcType=TIMESTAMP}, #{accComDesc,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.yscf.core.model.financial.BizCustomerAccount" >
    insert into t_biz_customer_account
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="pid != null" >
        PID,
      </if>
      <if test="customerId != null" >
        customer_id,
      </if>
      <if test="rechargeAmount != null" >
        recharge_amount,
      </if>
      <if test="withdrawAmount != null" >
        withdraw_amount,
      </if>
      <if test="dueAmount != null" >
        due_amount,
      </if>
      <if test="availableAmount != null" >
        available_amount,
      </if>
      <if test="freezeAmount != null" >
        freeze_amount,
      </if>
      <if test="tenderAmount != null" >
        tender_amount,
      </if>
      <if test="experienceAmount != null" >
        experience_amount,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="createUser != null" >
        create_user,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="lastUpdateUser != null" >
        last_update_user,
      </if>
      <if test="lastUpdateTime != null" >
        last_update_time,
      </if>
      <if test="accComDesc != null" >
        acc_com_desc,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="pid != null" >
        #{pid,jdbcType=VARCHAR},
      </if>
      <if test="customerId != null" >
        #{customerId,jdbcType=VARCHAR},
      </if>
      <if test="rechargeAmount != null" >
        #{rechargeAmount,jdbcType=DECIMAL},
      </if>
      <if test="withdrawAmount != null" >
        #{withdrawAmount,jdbcType=DECIMAL},
      </if>
      <if test="dueAmount != null" >
        #{dueAmount,jdbcType=DECIMAL},
      </if>
      <if test="availableAmount != null" >
        #{availableAmount,jdbcType=DECIMAL},
      </if>
      <if test="freezeAmount != null" >
        #{freezeAmount,jdbcType=DECIMAL},
      </if>
      <if test="tenderAmount != null" >
        #{tenderAmount,jdbcType=DECIMAL},
      </if>
      <if test="experienceAmount != null" >
        #{experienceAmount,jdbcType=DECIMAL},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null" >
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastUpdateUser != null" >
        #{lastUpdateUser,jdbcType=VARCHAR},
      </if>
      <if test="lastUpdateTime != null" >
        #{lastUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="accComDesc != null" >
        #{accComDesc,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.yscf.core.model.financial.BizCustomerAccount" >
    update t_biz_customer_account
    <set >
      <if test="customerId != null" >
        customer_id = #{customerId,jdbcType=VARCHAR},
      </if>
      <if test="rechargeAmount != null" >
        recharge_amount = #{rechargeAmount,jdbcType=DECIMAL},
      </if>
      <if test="withdrawAmount != null" >
        withdraw_amount = #{withdrawAmount,jdbcType=DECIMAL},
      </if>
      <if test="dueAmount != null" >
        due_amount = #{dueAmount,jdbcType=DECIMAL},
      </if>
      <if test="availableAmount != null" >
        available_amount = #{availableAmount,jdbcType=DECIMAL},
      </if>
      <if test="freezeAmount != null" >
        freeze_amount = #{freezeAmount,jdbcType=DECIMAL},
      </if>
      <if test="tenderAmount != null" >
        tender_amount = #{tenderAmount,jdbcType=DECIMAL},
      </if>
      <if test="experienceAmount != null" >
        experience_amount = #{experienceAmount,jdbcType=DECIMAL},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null" >
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastUpdateUser != null" >
        last_update_user = #{lastUpdateUser,jdbcType=VARCHAR},
      </if>
      <if test="lastUpdateTime != null" >
        last_update_time = #{lastUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="accComDesc != null" >
        acc_com_desc = #{accComDesc,jdbcType=VARCHAR},
      </if>
    </set>
    where PID = #{pid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yscf.core.model.financial.BizCustomerAccount" >
    update t_biz_customer_account
    set customer_id = #{customerId,jdbcType=VARCHAR},
      recharge_amount = #{rechargeAmount,jdbcType=DECIMAL},
      withdraw_amount = #{withdrawAmount,jdbcType=DECIMAL},
      due_amount = #{dueAmount,jdbcType=DECIMAL},
      available_amount = #{availableAmount,jdbcType=DECIMAL},
      freeze_amount = #{freezeAmount,jdbcType=DECIMAL},
      tender_amount = #{tenderAmount,jdbcType=DECIMAL},
      experience_amount = #{experienceAmount,jdbcType=DECIMAL},
      status = #{status,jdbcType=VARCHAR},
      create_user = #{createUser,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      last_update_user = #{lastUpdateUser,jdbcType=VARCHAR},
      last_update_time = #{lastUpdateTime,jdbcType=TIMESTAMP},
      acc_com_desc = #{accComDesc,jdbcType=VARCHAR}
    where PID = #{pid,jdbcType=VARCHAR}
  </update>
</mapper>